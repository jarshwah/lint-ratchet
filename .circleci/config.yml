version: 2.1

jobs:
  lint:
    docker:
      - image: cimg/python:3.12
    resource_class: small
    steps:
      - checkout

      - run:
          name: Install python tools
          command: pipx install uv pre-commit

      - run:
          name: Create virtualenv
          command: |
            uv venv /home/circleci/venv/
            echo "source /home/circleci/venv/bin/activate" >> $BASH_ENV

      - restore_cache:
          keys:
            - &lint-cache-key python-3.12-uv-v3-{{ checksum "requirements/development.txt" }}

      - run:
          name: Install dependencies
          command: make dev

      - run:
          name: Show uv cache directory
          command: uv cache dir

      - save_cache:
          key: *lint-cache-key
          paths:
            - "~/venv/"
            - "~/.cache/uv"

      - run:
          name: Run ruff formatter
          command: make ruff_format
          when: always

      - run:
          name: Run ruff linter
          command: make ruff_lint
          when: always

      - run:
          name: Run Mypy
          command: make mypy
          when: always

      - run:
          name: Run pre-commit hooks
          environment:
            # Don't run pre-commit checks which have a dedicated CI step.
            # Also, don't complain about commits on the main branch in CI.
            SKIP: ruff-lint,ruff-format,no-commit-to-branch
          command: pre-commit run --all-files
          when: always

      - store_test_results:
          path: test-results

  test:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
    resource_class: small

    steps:
      - checkout

      - run:
          name: Install python tools
          command: |
            pipx install uv

      - run:
          name: Create virtualenv
          command: |
            uv venv /home/circleci/venv/
            echo "source /home/circleci/venv/bin/activate" >> $BASH_ENV

      - restore_cache:
          keys:
            - &test-cache-key python-<< parameters.python-version >>-uv-v3-{{ checksum "requirements/development.txt" }}

      - run:
          name: Install dependencies
          command: make dev

      - run:
          name: Show uv cache directory
          command: uv cache dir

      - save_cache:
          key: *test-cache-key
          paths:
            - "~/venv/"
            - "~/.cache/uv"

      - run:
          name: Run tests
          command: pytest --junitxml=test-results/junit.<< parameters.python-version >>.xml
          when: always

      - store_test_results:
          path: test-results

workflows:
  test-build:
    jobs:
      - lint
      - test:
          matrix:
            parameters:
              python-version: ["3.11", "3.12"]
